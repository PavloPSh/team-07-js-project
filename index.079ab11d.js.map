{"mappings":"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","sources":["src/index.js","src/js/homeRendering.js","src/js/theme.js"],"sourcesContent":["import './js/loader.js'\nimport './js/form.js';\nimport './js/homeRendering.js';\nimport './js/apiServiсe.js';\nimport './js/scroll.js';\nimport './js/modal-footer.js';\nimport './js/popup-modal';\nimport './js/theme';\n\n\n","import filmsAPI from './apiServiсe';\nimport { renderCard } from './renderCard';\nimport { getGenreName } from './getGenreName';\n\nconst trendingFilms = new filmsAPI();\nconst mainSection = document.querySelector('.card__list');\nconst homeBtn = document.querySelector('.header__nav-link');\nconst logoLink = document.querySelector('.header__logo');\n\nasync function TrendingFilms(event) {\n  event.preventDefault();\n  document.querySelector('#search-form').firstElementChild.value = '';\n  trendingFilms.currentPage = 1;\n  mainSection.innerHTML = '';\n  try {\n    const result = await trendingFilms.getTrendingFilms();\n    result.data.results.forEach(film => {\n      const {\n        title,\n        name,\n        poster_path,\n        id,\n        vote_average,\n        genre_ids,\n        first_air_date,\n        release_date,\n      } = film;\n      let genre = getGenreName(genre_ids);\n      renderCard(\n        id,\n        poster_path,\n        title,\n        name,\n        genre,\n        first_air_date,\n        release_date,\n        vote_average\n      );\n    });\n  } catch (error) {\n    console.log('error');\n  }\n  infinteScroll();\n}\nlogoLink.addEventListener('click', TrendingFilms);\nhomeBtn.addEventListener('click', TrendingFilms);\nwindow.addEventListener('load', TrendingFilms);\n\nasync function LoadMorePhoto() {\n  trendingFilms.currentPage += 1;\n  try {\n    const result = await trendingFilms.getTrendingFilms();\n    result.data.results.forEach(film => {\n      const {\n        title,\n        name,\n        poster_path,\n        id,\n        vote_average,\n        genre_ids,\n        first_air_date,\n        release_date,\n      } = film;\n      let genre = getGenreName(genre_ids);\n      renderCard(\n        id,\n        poster_path,\n        title,\n        name,\n        genre,\n        first_air_date,\n        release_date,\n        vote_average\n      );\n    });\n  } catch (error) {\n    console.log('error');\n  }\n  infinteScroll();\n}\n\nconst infinteObserver = new IntersectionObserver(\n  ([entry], observer) => {\n    // перевірка останього елемента\n    if (entry.isIntersecting) {\n      // перестаємо його відслідковувати\n      observer.unobserve(entry.target);\n      // Завантажуємо нову порцію контенту\n      LoadMorePhoto();\n    }\n  },\n  { threshold: 0.5 }\n);\n\nconst infinteScroll = () => {\n  const lastCard = document.querySelector('.card__item:last-child');\n  if (lastCard) {\n    infinteObserver.observe(lastCard);\n  }\n};\n","if (!localStorage.theme) localStorage.theme = \"light\" \ndocument.body.className = localStorage.theme\n\n\ntoggleThemeBtn.onclick = () => {\n    document.body.classList.toggle(\"dark\")\n    // localStorage.theme = document.body.className || \"light\"\n    \n   \n}\n\nlet changeThemeButtons = document.querySelectorAll('.changeTheme');\n\nchangeThemeButtons.forEach(button => {\n    button.addEventListener('click', function () {\n        applyTheme(this.dataset.theme)\n        // let theme = this.dataset.theme;\n        // alert (theme)\n        // applyTheme(theme);\n        localStorage.setItem('theme', this.dataset.theme)\n    });\n});\nfunction applyTheme(themeName) {\n    \n    changeThemeButtons.forEach(button => {\n        button.style.display = 'block';\n    \n    });\n    document.querySelector(`[data-theme=\"${themeName}\"]`).style.display = 'none';\n    localStorage.setItem('theme', themeName);\n}\n\n\nlet activeTheme = localStorage.getItem('theme'); \n\nif(activeTheme === null || activeTheme === 'light') { \n    applyTheme('light');\n} else if (activeTheme === 'dark') { \n    applyTheme('dark');\n}"],"names":["require","parcelHelpers","_renderCard","_getGenreName","trendingFilms","default","mainSection","document","querySelector","homeBtn","TrendingFilms","event","_TrendingFilms","apply","this","arguments","_asyncToGeneratorJsDefault","_regeneratorRuntimeDefault","mark","_callee","preventDefault","firstElementChild","value","currentPage","innerHTML","getTrendingFilms","_ctx","sent","data","results","forEach","film","title","name","poster_path","id","vote_average","genre_ids","first_air_date","release_date","genre","getGenreName","renderCard","console","log","infinteScroll","_LoadMorePhoto","addEventListener","window","infinteObserver","IntersectionObserver","param","observer","entry","isIntersecting","unobserve","target","LoadMorePhoto","threshold","lastCard","observe","localStorage","theme","body","className","toggleThemeBtn","onclick","classList","toggle","changeThemeButtons","querySelectorAll","applyTheme","themeName","button","style","display","concat","setItem","dataset","activeTheme","getItem"],"version":3,"file":"index.079ab11d.js.map"}