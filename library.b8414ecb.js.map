{"mappings":"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","sources":["src/lib.js","src/js/watched-btn.js","src/js/queue-btn.js"],"sourcesContent":["import './js/loader.js';\nimport './js/form.js';\nimport './js/modal-registration.js';\nimport './js/apiServiсe.js';\n// import './js/scroll.js';\nimport './js/modal-footer.js';\nimport './js/popup-modal';\nimport './js/watched-btn.js';\nimport './js/queue-btn.js';\n","import Notiflix from 'notiflix';\nimport { onQueueBtnClick } from './queue-btn';\nimport { renderCard } from './renderCard';\n// import { renderQueueCard } from './queue-btn';\n\nconst watchedBtn = document.querySelector('button[data-action=\"watched\"]');\nconst queueBtn = document.querySelector('button[data-action=\"queue\"]');\n// const queueMovies = JSON.parse(localStorage.getItem('Queque:'));\nconst mainSection = document.querySelector('.card__list');\nconst watchedMovies = JSON.parse(localStorage.getItem('Watched:'));\nconst loader = document.querySelector('.loader__wrapper');\nconst clearBtn = document.querySelector('.clear-btn');\n// console.log(watchedMovies);\nconsole.log(location)\nconst test = localStorage.setItem('local-data', `${location.href}`)\nexport const addres = test;\n// console.log(addres)\n// export const myLibraryLocation = {\n//   location: `${location}`\n// };\n// console.log(myLibraryLocation)\n\nwatchedBtn?.addEventListener('click', onWatchBtnClick);\nclearBtn?.addEventListener('click', onClearBtnClick);\n\n// onWatchBtnClick();\nfirstBtnActive();\n\n\n\n// const IsActiveBtn = localStorage.setItem('last-active-btn', 'watchedButton');\nfunction firstBtnActive() {\n  if (localStorage.getItem('last-active-btn') === 'watchedButton') {\n    console.log(localStorage.getItem('last-active-btn'))\n    return onWatchBtnClick()\n  }\n\n  if (localStorage.getItem('last-active-btn') === 'queueButton') {\n    console.log(localStorage.getItem('last-active-btn'))\n    return onQueueBtnClick()\n  } else {\n    onWatchBtnClick()\n  }\n}\n\n\n\n\n\nfunction onWatchBtnClick() {\n  loader.classList.remove('hidden');\n  watchedBtn.classList.add('current-btn');\n  queueBtn.classList.remove('current-btn');\n  clearBtn.classList.add('clear-btn--visible')\n  localStorage.setItem('last-active-btn', 'watchedButton')\n\n  if (watchedMovies === null || watchedMovies.length === 0) {\n    // mainSection.innerHTML = '';\n    clearBtn.classList.remove('clear-btn--visible')\n    clearBtn.classList.add('clear-btn')\n    onEmptyMoviesStorage();\n    loader.classList.add('hidden');\n    // onEmptyMoviesStorage();\n    return Notiflix.Notify.failure('You need to add at least 1 movie.', {timeout: 1500});\n  }\n\n  mainSection.innerHTML = '';\n\n  renderWatchedCard();\n  loader.classList.add('hidden');\n}\n\nfunction renderWatchedCard() {\n  const watchedL = watchedMovies.map(film => {\n    const genres = film.genres.map(genre => genre.name);\n    console.log(genres);\n\n    renderCard(\n      film.id,\n      film.poster_path,\n      film.title,\n      film.name,\n      genres,\n      film.first_air_date,\n      film.release_date,\n      film.vote_average\n    );\n  });\n}\n\nexport function onEmptyMoviesStorage() {\n  const warningText = `<li class=\"card__item\">You don't have any movies added.</li>`;\n  mainSection.innerHTML = warningText;\n}\n\nfunction onClearBtnClick() {\n  mainSection.innerHTML = '';\n  localStorage.removeItem('Watched:');\n  location.reload();\n  // mainSection.innerHTML = '';\n}\n\n// function onQueueBtnClickv2() {\n//   mainSection.innerHTML = '';\n//   watchedBtn.classList.remove('current-btn');\n//   queueBtn.classList.add('current-btn');\n\n//   if (queueMovies === null || queueMovies.length === 0) {\n//     // mainSection.innerHTML = '';\n//     onEmptyMoviesStorage();\n//     loader.classList.add('hidden');\n//     return Notiflix.Notify.failure('You need to add at least 1 movie.', {timeout: 1500});\n//   }\n\n//   renderQueueCard();\n//   loader.classList.add('hidden');\n// }\n\n// localStorage.clear()","import Notiflix from 'notiflix';\nimport { renderCard } from './renderCard';\nimport { onEmptyMoviesStorage } from './watched-btn';\n\nconst queueBtn = document.querySelector('button[data-action=\"queue\"]');\nconst watchedBtn = document.querySelector('button[data-action=\"watched\"]');\nconst mainSection = document.querySelector('.card__list');\nconst queueMovies = JSON.parse(localStorage.getItem('Queque:'));\nconst loader = document.querySelector('.loader__wrapper');\nconst clearBtn = document.querySelector('.clear-btn');\nconsole.log(queueMovies);\n\nqueueBtn?.addEventListener('click', onQueueBtnClick);\nclearBtn?.addEventListener('click', onClearBtnClick);\n\n\n\n// localStorage.setItem('last-active-btn', 'queueButton')\n\n\n\n\nexport function onQueueBtnClick() {\n  loader.classList.remove('hidden');\n  watchedBtn.classList.remove('current-btn');\n  queueBtn.classList.add('current-btn');\n  clearBtn.classList.add('clear-btn--visible')\n  localStorage.setItem('last-active-btn', 'queueButton')\n\n  if (queueMovies === null || queueMovies.length === 0) {\n    // mainSection.innerHTML = '';\n    clearBtn.classList.remove('clear-btn--visible')\n    clearBtn.classList.add('clear-btn')\n    onEmptyMoviesStorage();\n    loader.classList.add('hidden');\n    return Notiflix.Notify.failure('You need to add at least 1 movie.', {timeout: 1500});\n  }\n\n  mainSection.innerHTML = '';\n\n  renderQueueCard();\n  loader.classList.add('hidden');\n}\n\nexport function renderQueueCard() {\n  const queueList = queueMovies.map(film => {\n    const genres = film.genres.map(genre => genre.name);\n    console.log(genres);\n\n    renderCard(\n      film.id,\n      film.poster_path,\n      film.title,\n      film.name,\n      genres,\n      film.first_air_date,\n      film.release_date,\n      film.vote_average\n    );\n  });\n}\n\nfunction onClearBtnClick() {\n  mainSection.innerHTML = '';\n  localStorage.removeItem('Queque:');\n  location.reload();\n  // mainSection.innerHTML = '';\n}"],"names":["require","parcelHelpers","addres","export","exports","onEmptyMoviesStorage","_notiflix","_queueBtn","_renderCard","watchedBtn","document","querySelector","queueBtn","mainSection","watchedMovies","JSON","parse","localStorage","getItem","loader","clearBtn","console","log","location","setItem","concat","href","onWatchBtnClick","classList","remove","add","length","_notiflixDefault","default","Notify","failure","timeout","innerHTML","map","film","genres","genre","name","renderCard","id","poster_path","title","first_air_date","release_date","vote_average","addEventListener","removeItem","reload","onQueueBtnClick","firstBtnActive","renderQueueCard","_watchedBtn","queueMovies"],"version":3,"file":"library.b8414ecb.js.map"}